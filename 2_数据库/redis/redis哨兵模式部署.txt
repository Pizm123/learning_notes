
原文链接： https://blog.csdn.net/zhan123com/article/details/105512241

1、新建bin目录和etc目录

cd /usr/local/redis/ mkdir etc mkdir bin mkdir redis_master mkdir redis_slave1 mkdir redis_slave2


说明：
redis_master作为master节点配置文件的目录
redis_slave1作为第一个slave节点配置文件的目录
redis_slave2作为第二个slave节点配置文件的目录

2、回到安装目录将配置文件拷贝对应目录下
cp redis.conf /root/redis/redis-5.0.7/etc/redis_master cp redis.conf /root/redis/redis-5.0.7/etc/redis_slave1 cp redis.conf /root/redis/redis-5.0.7/etc/redis_slave2  1 2 3


xxxxxxxxxx
 
1
cp
 
redis
.
conf
 
/
root
/
redis
/
redis
-
5.0.7
/
etc
/
redis_master
2
cp
 
redis
.
conf
 
/
root
/
redis
/
redis
-
5.0.7
/
etc
/
redis_slave1
3
cp
 
redis
.
conf
 
/
root
/
redis
/
redis
-
5.0.7
/
etc
/
redis_slave2
4
5
1
6
2
7
3


3、进入 src 文件夹下，将mkreleasehdr.sh、redis-benchmark、redis-check-aof、redis-check-rdb、redis-cli、redis-server、redis-sentinel文件复制到 bin 文件夹
cd src/ cp mkreleasehdr.sh redis-benchmark redis-check-aof redis-check-rdb redis-cli redis-server redis-sentinel /root/redis/redis-5.0.7/bin/  1 2


xxxxxxxxxx
 
1
cd
 
src
/
2
cp
 
mkreleasehdr
.
sh
 
redis
-
benchmark
 
redis
-
check
-
aof
 
redis
-
check
-
rdb
 
redis
-
cli
 
redis
-
server
 
redis
-
sentinel
 
/
root
/
redis
/
redis
-
5.0.7
/
bin
/
3
4
1
5
2


4、启动一个redis服务测试，redis是否可以正常启动

5、分别修改各节点配置文件
cd etc/redis_master vim redis.conf  1 2


xxxxxxxxxx
 
1
cd
 
etc
/
redis_master
2
vim
 
redis
.
conf
3
4
1
5
2


主节点配置
bind：0.0.0.0                                 ##Redis 默认只允许本机访问，把 bind 修改为 0.0.0.0 表示允许所有远程访问。如果想指定限制访问，可设置对应的 ip。 port：6379 daemonize yes                             ##设置为后台启动 pidfile "/var/run/redis_6379.pid"       ##redi pid存储位置，建议加上端口，便于区分 logfile "/root/redis/redis-5.0.7/bin/redis_6379.log"     ##日志文件存储位置 requirepass：pwdtest@2019        ##设置 redis 连接密码 masterauth：pwdtest@2019         ##slave 服务连接 master 的密码  1 2 3 4 5 6 7 8


xxxxxxxxxx
 
1
bind：0
.0.0.0
                                 
##Redis 默认只允许本机访问，把 bind 修改为 0.0.0.0 表示允许所有远程访问。如果想指定限制访问，可设置对应的 ip。
2
port：6379
   
3
daemonize
 
yes
                             
##设置为后台启动
4
pidfile
 
"/var/run/redis_6379.pid"
       
##redi pid存储位置，建议加上端口，便于区分
5
logfile
 
"/root/redis/redis-5.0.7/bin/redis_6379.log"
     
##日志文件存储位置
6
requirepass：pwdtest
@
2019
        
##设置 redis 连接密码
7
masterauth：pwdtest
@
2019
         
##slave 服务连接 master 的密码
8
9
1
10
2
11
3
12
4
13
5
14
6
15
7
16
8


从节点配置

从机的配置和主机相似，不同的地方是需要使用replicaof指定主机（master）的IP地址和端口，需要注意的是老版本使用的是 slaveof，目前我使用的5.0.7版本要使用 replicaof ，如下。
bind：0.0.0.0 port：6378 daemonize yes pidfile "/var/run/redis_6378.pid" logfile "/root/redis/redis-5.0.7/bin/redis_6378.log" requirepass：pwdtest@2019 masterauth：pwdtest@2019 replicaof 192.168.231.130 6379   ##主节点的IP 端口  1 2 3 4 5 6 7 8 9


xxxxxxxxxx
 
1
bind：0
.0.0.0
2
port：6378
3
daemonize
 
yes
4
pidfile
 
"/var/run/redis_6378.pid"
5
logfile
 
"/root/redis/redis-5.0.7/bin/redis_6378.log"
6
requirepass：pwdtest
@
2019
7
masterauth：pwdtest
@
2019
8
replicaof
 
192.168.231.130
 
6379
   
##主节点的IP 端口
9
10
1
11
2
12
3
13
4
14
5
15
6
16
7
17
8
18
9


replicaof 192.168.231.130 6379
指定当本机为 slave 服务时，设置 master 服务的IP地址及端口，在 redis 启动的时候会自动跟 master 进行数据同步，所以两台从机都这样配置即可。

照样修改另一个从节点的配置文件，端口可为6377

至此，主从架构已经配置完毕









四：哨兵模式搭建


哨兵的配置文件是：sentinel.conf

1、同样为了方便管理，将sentinel.conf复制至对应的目录下
cp redis-5.0.7 cp sentinel.conf etc/redis_master/ cp sentinel.conf etc/redis_slave1/ cp sentinel.conf etc/redis_slave2/  1 2 3 4


xxxxxxxxxx
 
1
cp
 
redis
-
5.0.7
2
cp
 
sentinel
.
conf
 
etc
/
redis_master
/
3
cp
 
sentinel
.
conf
 
etc
/
redis_slave1
/
4
cp
 
sentinel
.
conf
 
etc
/
redis_slave2
/
5
6
1
7
2
8
3
9
4


2、分别编辑 sentinel.conf

master节点6379对应的sentinel.conf端口为6376
slave1节点6378对应的sentinel.conf端口为6375
slave2节点6377对应的sentinel.conf端口为6374
vim sentinel.conf  1


xxxxxxxxxx
 
1
vim
 
sentinel
.
conf
2
3
1

port:6376                               ## 默认端口为26379 sentinel monitor mymaster 192.168.231.130 6379 2           ##指定主机IP地址和端口，并且指定当有2台哨兵认为主机挂了，则对主机进行容灾切换 sentinel auth-pass mymaster pwdtest@2019             ##当在Redis实例中开启了requirepass，这里就需要提供密码 sentinel down-after-milliseconds mymaster 3000                      ##这里设置了主机多少秒无响应，则认为挂了 snetinel parallel-syncs mymaster 1              ##主备切换时，最多有多少个slave同时对新的master进行同步，这里设置为默认的1 sentinel failover-timeout mymaster 180000       ##故障转移的超时时间，这里设置为三分钟  1 2 3 4 5 6 7 8 9 10


xxxxxxxxxx
 
1
port
:
6376
                               
## 默认端口为26379
2
sentinel
 
monitor
 
mymaster
 
192.168.231.130
 
6379
 
2
           
##指定主机IP地址和端口，并且指定当有2台哨兵认为主机挂了，则对主机进行容灾切换
3
sentinel
 
auth
-
pass
 
mymaster
 
pwdtest
@
2019
             
##当在Redis实例中开启了requirepass，这里就需要提供密码
4
sentinel
 
down
-
after
-
milliseconds
 
mymaster
 
3000
                      
##这里设置了主机多少秒无响应，则认为挂了
5
snetinel
 
parallel
-
syncs
 
mymaster
 
1
              
##主备切换时，最多有多少个slave同时对新的master进行同步，这里设置为默认的1
6
sentinel
 
failover
-
timeout
 
mymaster
 
180000
       
##故障转移的超时时间，这里设置为三分钟
7
8
1
9
2
10
3
11
4
12
5
13
6
14
7
15
8
16
9
17
10


3、启启动三个哨兵
cd bin/ redis-sentinel ../etc/redis_master/sentinel.conf redis-sentinel ../etc/redis_slave1/sentinel.conf redis-sentinel ../etc/redis_slave2/sentinel.conf  1 2 3 4


xxxxxxxxxx
 
1
cd
 
bin
/
2
redis
-
sentinel
 ..
/
etc
/
redis_master
/
sentinel
.
conf
3
redis
-
sentinel
 ..
/
etc
/
redis_slave1
/
sentinel
.
conf
4
redis
-
sentinel
 ..
/
etc
/
redis_slave2
/
sentinel
.
conf
5
6
1
7
2
8
3
9
4


4、查看哨兵信息
./redis-cli -h 121.36.xx.xx -p 6375 info sentinel


xxxxxxxxxx
 
1
.
/
redis
-
cli
 
-
h
 
121.36
.
xx
.
xx
 
-
p
 
6375
2
info
 
sentinel

